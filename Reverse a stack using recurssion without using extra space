https://www.geeksforgeeks.org/reverse-a-stack-using-recursion/


#include<bits/stdc++.h>
using namespace std;

//Reverse a stack using recurssion without using extra space

//insert function
void insert(stack<int>&s,int element){
    if(s.size()==0){
    s.push(element);
    return;
}
    
    int temp=s.top();
    s.pop();
    insert(s,element);
    s.push(temp);
    return;
}

//main reverse function
void reverse(stack<int>&s)
{
    if(s.size()==1)return;
    
    int temp=s.top();
    s.pop();
    reverse(s);
    insert(s,temp);
    return;
}
//print function
void print(stack<int>&s)
{
    while(!s.empty())
    {
        int temp=s.top();
        s.pop();
        cout<<temp<<" ";
    }
}

int main()
{
    stack<int>s;
    s.push(1);
    s.push(2);
    s.push(3);
    s.push(4);
    s.push(5);
    
    cout<<"stack after reversing: ";
    reverse(s);
    print(s);
    
    return 0;
}
