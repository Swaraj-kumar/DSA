https://leetcode.com/problems/sliding-window-maximum/submissions/


class Solution {
public:
    vector<int> maxSlidingWindow(vector<int>& nums, int k) {
    //resultant vector
    vector<int>res;
    //priority queue-->element with highest priority is served first
    priority_queue<pair<int,int>>pq;
    //i-->starting pointer   j-->ending pointer
    int i=0,j=0;
    //iterate till array size
    while(j < nums.size())
    {
    //push all the element to priority queue
     pq.push({nums[j],j});
    //till we reach a window
     if(j-i+1 < k)j++;
    //if window is reached
     else if(j-i+1 == k)
     {
         //exclude the ith element which is not in window
         while(pq.top().second < i)
             pq.pop();
         //push the first element to priority queue as it gives the maximum element 
         res.push_back(pq.top().first);
         //increment your left and right
         i++,j++;
     }
    }
        return res;
    }
};
