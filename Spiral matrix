https://leetcode.com/problems/spiral-matrix/submissions/

class Solution {
public:
    vector<int> spiralOrder(vector<vector<int>>& matrix) {
    vector<int>res;
    int n=matrix.size();
    int m=matrix[0].size();
    int top=0;
    int bottom=n-1;
    int left=0;
    int right=m-1;
   // direction 1-->left to right 2--> top to bottom 3-->right to left 4-->bottom to top 
    int direction=1;
    while(top<=bottom && left<=right)
    {
        if(direction==1)
        {
            for(int i=left;i<=right;i++)
            {
                res.push_back(matrix[top][i]);
            }
            top=top+1;
            direction=2;
        }
        else if(direction==2)
        {
            for(int i=top;i<=bottom;i++)
            {
                res.push_back(matrix[i][right]);
            }
            right=right-1;
            direction=3;
        }
        else if(direction==3)
        {
            for(int i=right;i>=left;i--)
            {
                res.push_back(matrix[bottom][i]);
            }
            bottom=bottom-1;
            direction=4;
        }
        else if(direction==4)
        {
            for(int i=bottom;i>=top;i--)
            {
                res.push_back(matrix[i][left]);
            }
            left=left+1;
            direction=1;
        }
    }
        return res;
    }
};




