
https://leetcode.com/problems/majority-element/submissions/

class Solution {
public:
    //appraoch-1
    //the element that appears more than n/2 times will appear in middle
    int majorityElement(vector<int>& nums) {
    int n=nums.size();
    sort(nums.begin(),nums.end());
    return nums[n/2];
    }
};



//approach-2
class Solution {
public:
    //moores voting algorithm 
    //T.c-->o(n)  s.c-->o(1)
    int majorityElement(vector<int>& nums) {
        int majority, count = 0;
        for(int i = 0; i < nums.size(); i++){
            if(count == 0){
                majority = nums[i];
            }
            if(majority == nums[i]) count++;
            else count--;
        }
        return majority;
    }
};
