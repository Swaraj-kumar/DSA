https://leetcode.com/problems/k-th-symbol-in-grammar/

class Solution {
public:
    
    //observations:
//      2^0<--n=1->0  
//      2^1<--n=2->0 1
//      2^2<--n=3->0 1 1 0
//      2^3<--n=4->0 1 1 0 1 0 0 1
    
//      for n = 4 , half of elements of 4(0 1 1 0) is similar to n-1 i.e elements of 3(0 1 1 0)
//      remaining half of n=4 i.e element(1 0 0 1) is complement of n = 3
         
//      Algorithm:
//      1.find the mid element 
//      2.check whether the k lies before the middle element or not if it lies than return(n-1,k)
//      3.if it lies above mid then return its complement
//      BASE CONDITION--> if(n==1 && k==1)since its 1 based indexing and the inputs are shorter than return 0
         
    
    int kthGrammar(int n, int k) {
    int mid = pow(2,n-1)/2;
    
    if(n==1 && k==1)return 0;
    if(k<=mid)
    return kthGrammar(n-1,k);
    else
    return !kthGrammar(n-1,k-mid);
    }
};
