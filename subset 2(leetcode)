https://leetcode.com/problems/subsets-ii/submissions/

class Solution {
public:
    
    //similar to subset 1 problem
    //here we are raking map data structure and printing only those elements which has occured once
    void solve(vector<int>ip,vector<int>op,vector<vector<int>>&res,map<vector<int>,int>&mp)
    {
        if(ip.size()==0)
        {
            mp[op]++;
            if(mp[op]==1)
            res.push_back(op);
            return;
        }
        
        vector<int>op1=op;
        vector<int>op2=op;
        op2.push_back(ip[0]);
        ip.erase(ip.begin()+0);
        solve(ip,op1,res,mp);
        solve(ip,op2,res,mp);
        return;
    }
    
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
    sort(nums.begin(),nums.end());
    vector<int>ip=nums;
    vector<int>op;
    vector<vector<int>>res;
    map<vector<int>,int>mp;
    solve(ip,op,res,mp);
    return res;
    }
};
